"use client"
import Masters from "@/app/changeOrder/components/Masters"
import OrderDescription from "@/app/changeOrder/components/OrderDescription"
import ServicesWindow from "@/app/changeOrder/components/ServicesWindow"
import Cities from "@/app/form/components/OrderForm/components/Cities"
import CustomerInfo from "@/app/form/components/OrderForm/components/CustomerInfo"
import DateAndTime from "@/app/form/components/OrderForm/components/DateAndTime"
import { User } from "@/hooks/useUserByAt"
import { useOrderStore } from "@/stores/orderStore"
import { useRouter } from "next/navigation"
import { useEffect } from "react"

interface Props {
    user: User;
    leadId?: string;
}

export default function OrderForm({ leadId }: Props) {
    const router = useRouter();
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    const user = useOrderStore(state => state.currentUser)
    const team = typeof user?.team === 'string' ? user.team : user?.team ?? 'A';
    const city = useOrderStore(state => state.formData.city);
    const teamId = useOrderStore(state => state.formData.teamId);
    const shouldRedirectToMyOrders = useOrderStore(state => state.shouldRedirectToMyOrders);
    const { updateFormData} = useOrderStore();
    


    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ store –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ teamId === "Init"
    useEffect(() => {
        if (team && teamId === "Init") {
            updateFormData('teamId', team);
           useOrderStore.setState({currentLeadID: ""})
        }
    }, [team, teamId, updateFormData]);

    useEffect(() => {
        console.log(team)
    })

    // üîÑ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ myOrders
    useEffect(() => {
        if (shouldRedirectToMyOrders) {
            console.log('üîÑ Redirecting to My Orders...');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
            useOrderStore.setState({ shouldRedirectToMyOrders: false });
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É myOrders —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                router.push('/myOrders');
          
        }
    }, [shouldRedirectToMyOrders, router]);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Cities —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –∏–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ (Init)
    const shouldShowCities = teamId === "Init" || user?.team === teamId;

    return (
        <div className="space-y-6">
            <CustomerInfo/>
            <DateAndTime/>
            {shouldShowCities && (
                <Cities team={team}/>
            )}
            <Masters team={team} city={city} />
            <OrderDescription/>
            <ServicesWindow/>
        </div>
    );
}